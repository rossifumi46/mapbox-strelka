{"version":3,"sources":["components/Intro.js","components/Map.js","images/close_icon.svg","components/Popup.js","App.js","reportWebVitals.js","index.js"],"names":["Intro","props","className","onClick","Map","data","dataTest","features","slice","mapboxgl","accessToken","useState","points","setPoints","mapContainerRef","useRef","useEffect","map","container","current","style","center","geometry","coordinates","zoom","addControl","NavigationControl","forEach","result","Marker","setLngLat","addTo","getElement","addEventListener","properties","name","remove","item","ref","Popup","type","onClose","src","closeIcon","alt","title","App","isMapClicked","setMapClicked","isPopupOpen","setPopupOpen","setPopupTitle","handleClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"y64DAWeA,MATf,SAAeC,GACb,OACE,sBAAKC,UAAU,QAAf,UACE,oBAAIA,UAAU,eAAd,2PACA,wBAAQA,UAAU,oBAAoBC,QAASF,EAAME,QAArD,kG,gCCmDSC,MAnDf,SAAaH,GACX,IAAMI,EAAOC,EAASC,SAASC,MAAM,EAAG,IACxCC,IAASC,YAAc,iGAFL,MAIYC,mBAAS,IAJrB,mBAIVC,EAJU,KAIFC,EAJE,KAMZC,EAAkBC,mBAyBxB,OAvBAC,qBAAU,WACR,IAAMC,EAAM,IAAIR,IAASL,IAAI,CAC3Bc,UAAWJ,EAAgBK,QAC3BC,MAAO,qCACPC,OAAQhB,EAAK,GAAGiB,SAASC,YACzBC,KAAM,KAeR,OAbAX,EAAUR,GAEVY,EAAIQ,WAAW,IAAIhB,IAASiB,kBAAqB,gBAEjDrB,EAAKsB,SAAQ,SAAAC,GAAW,IACdN,EAAaM,EAAbN,UAEO,IAAIb,IAASoB,QACzBC,UAAUR,EAASC,aACnBQ,MAAMd,GACFe,aAAaC,iBAAiB,SAAS,kBAAMhC,EAAME,QAAQyB,EAAOM,WAAWC,YAG/E,kBAAMlB,EAAImB,YAChB,IAGD,sBAAKlC,UAAU,MAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKA,UAAU,SAAf,SACGU,GAAUA,EAAOK,KAAI,SAACoB,GACrB,OACE,qBAAKnC,UAAU,QAAQC,QAAS,kBAAMF,EAAME,QAAQkC,EAAKH,WAAWC,OAApE,SACE,oBAAIjC,UAAU,QAAd,SAAuBmC,EAAKH,WAAWC,gBAMjD,qBAAKjC,UAAU,oBAAf,SACE,qBAAKA,UAAU,gBAAgBoC,IAAKxB,UCnD7B,G,MAAA,IAA0B,wCCgB1ByB,MAbf,SAAetC,GACb,OACE,yBAASC,UAAU,QAAnB,SACE,sBAAKA,UAAU,mBAAf,UACE,wBAAQsC,KAAK,SAAStC,UAAU,eAAeC,QAASF,EAAMwC,QAA9D,SACE,qBAAKC,IAAKC,EAAWC,IAAI,kFAAiB1C,UAAU,uBAEtD,oBAAIA,UAAU,eAAd,SAA8BD,EAAM4C,cCe7BC,MAnBf,WAAgB,IAAD,EACyBnC,oBAAS,GADlC,mBACNoC,EADM,KACQC,EADR,OAEuBrC,oBAAS,GAFhC,mBAENsC,EAFM,KAEOC,EAFP,OAGkBvC,mBAAS,IAH3B,mBAGNkC,EAHM,KAGCM,EAHD,KAKb,SAASC,EAAYP,GACnBM,EAAcN,GACdK,GAAcD,GAGhB,OACE,sBAAK/C,UAAU,MAAf,WACI6C,GAAgB,cAAC,EAAD,CAAO5C,QAAS,kBAAM6C,GAAeD,MACtDA,GAAgB,cAAC,EAAD,CAAK5C,QAASiD,IAC9BH,GAAe,cAAC,EAAD,CAAOJ,MAAOA,EAAOJ,QAASW,QCRrCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1cef1ddb.chunk.js","sourcesContent":["import './Intro.css';\n\nfunction Intro(props) {\n  return (\n    <div className=\"intro\">\n      <h1 className=\"intro__title\">Туристические точки притяжения Калиниграда</h1>\n      <button className=\"intro__map-button\" onClick={props.onClick}>Перейти к карте</button>\n    </div>\n  )\n}\n\nexport default Intro;","import './Map.css';\nimport { useEffect, useRef, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\n\nimport dataTest from '../points.json';\n\nfunction Map(props) {\n  const data = dataTest.features.slice(0, 20);\n  mapboxgl.accessToken = 'pk.eyJ1Ijoicm9zc2lmdW1pNDYiLCJhIjoiY2trY3BweDM5MDJxYjJxbWl2bWd5eHcydiJ9.1IjgHneYp_Wvwd5Xcm3ByA';\n\n  const [ points, setPoints ] = useState([]);\n\n  const mapContainerRef = useRef();\n\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: data[0].geometry.coordinates,\n      zoom: 13,\n    });\n    setPoints(data);\n\n    map.addControl(new mapboxgl.NavigationControl(), 'bottom-right');\n\n    data.forEach(result => {\n      const { geometry } = result;\n\n      const marker = new mapboxgl.Marker()\n        .setLngLat(geometry.coordinates)\n        .addTo(map);\n      marker.getElement().addEventListener('click', () => props.onClick(result.properties.name));\n    });\n\n    return () => map.remove();\n  }, []);\n\n  return (\n    <div className=\"map\">\n      <div className=\"map__left-column\">\n        <div className=\"points\">\n          {points && points.map((item) => {\n            return (\n              <div className=\"point\" onClick={() => props.onClick(item.properties.name)}>\n                <h3 className=\"title\">{item.properties.name}</h3>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n      <div className=\"map__right-column\">\n        <div className=\"map-container\" ref={mapContainerRef} />\n      </div>\n    </div>\n  )\n}\n\nexport default Map;","export default __webpack_public_path__ + \"static/media/close_icon.118074ba.svg\";","import './Popup.css';\nimport closeIcon from '../images/close_icon.svg';\n\nfunction Popup(props) {\n  return (\n    <section className='popup'>\n      <div className=\"popup__container\">\n        <button type=\"button\" className=\"popup__close\" onClick={props.onClose}>\n          <img src={closeIcon} alt=\"кнопка закрыть\" className=\"popup__close-img\"/>\n        </button>\n        <h3 className=\"popup__title\">{props.title}</h3>\n      </div>\n    </section>\n  )\n}\n\nexport default Popup;","import './App.css';\nimport Intro from './components/Intro';\nimport Map from './components/Map';\nimport { useState } from 'react';\nimport Popup from './components/Popup';\n\nfunction App() {\n  const [isMapClicked, setMapClicked] = useState(false);\n  const [isPopupOpen, setPopupOpen] = useState(false);\n  const [title, setPopupTitle] = useState('');\n\n  function handleClick(title) {\n    setPopupTitle(title);\n    setPopupOpen(!isPopupOpen);\n  }\n\n  return (\n    <div className=\"App\">\n      {!isMapClicked && <Intro onClick={() => setMapClicked(!isMapClicked)}/>}\n      {isMapClicked && <Map onClick={handleClick}/>}\n      {isPopupOpen && <Popup title={title} onClose={handleClick}/>}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n); \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}